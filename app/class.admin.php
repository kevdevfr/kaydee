<?php require_once "functions.php";class Admin {	private $xml;	private $path;	public function __construct() {		$this -> path = dirname(dirname(__FILE__)).'/xml/admin.xml';		if(file_exists( $this -> path))		{			$context  = stream_context_create(array('http' => array('header' => 'Accept: application/xml')));			$xml = file_get_contents($this -> path, false, $context);			if ( substr_count ( $xml , '<' ) < 2 )				$this -> xml = new SimpleXMLElement('<structure></structure>');			else				$this -> xml = simplexml_load_string($xml, NULL, LIBXML_NOCDATA);		} else			$this -> xml = new SimpleXMLElement('<structure></structure>');	}	public function types($type='') {		$array = Array(			Array('text','Texte',0),			Array('textarea','Zone de Texte',0),			Array('wysiwyg','WYSIWYG',0),			Array('ghost','Historique',0),			Array('date','Date',0),			Array('day','Date du jour',0),			Array('mod','Date de modification',0),			Array('fileadmin','Fichier',1),			Array('file','Champ Fichier',1),			Array('gallery','Galerie',0),			Array('radio','Champ Radio',1),			Array('select','Liste Déroulante',1),			Array('checkbox','Boîtes',1),			Array('checkbox2','Boîtes',1),			Array('title','Titre',1),			Array('subtitle','Sous-titre',1),			Array('label','Label',1),			Array('html','Texte HTML',1),			Array('password','Mot de Passe',0),			Array('object','Objet',0),			Array('rel','Relationnel',0)		);		if($type=='')			return $array;		else		{			foreach ($array as $valueArray)				if($valueArray[0]==$type)					return $valueArray[2];		}	}	public function adminList($id=-1) {		echo "<form name='admin' action='".strtok($_SERVER["REQUEST_URI"],'?')."' method='POST'>";		echo '<div class="form ui-sortable">';		$count = 0;		foreach( $this -> xml -> children() as $element)		{			if($id!=$count)			{				$array = json_decode(json_encode($element), TRUE);				echo '<div class="line ui-sortable-handle">';				echo '<div class="inlineBlock"><a href="admin.php?id='.$array['@attributes']['id'].'&name='.$array['@attributes']['name'].'">'.$array['@attributes']['name'].'</div>';				echo '<div class="inlineBlock">'.$array['@attributes']['id'].'</div>';				echo '<div class="inlineBlock">'.$element->getName().'</div>';				echo '<div class="inlineBlock">'.$element['lvl'].'</div>';				echo '<div class="inlineBlock">';				echo "<a href='".strtok($_SERVER["REQUEST_URI"],'?')."?a=edit&n=".($count)."'><i class='icon-pencil'></i></a> <a class='suppr' href='".strtok($_SERVER["REQUEST_URI"],'?')."?a=delete&n=".$count."'><i class='icon-block'></i></a>";				echo '</div>';				echo '</div>';			} else {				$array = json_decode(json_encode($element), TRUE);				echo '<div class="line addline">';				echo '<div class="inlineBlock lineField"><input type="text" name="nom" placeholder="nom" value="'.$array['@attributes']['name'].'" /></div>';				echo '<div class="inlineBlock lineField"><input type="text" name="id" placeholder="id" value="'.$array['@attributes']['id'].'" /></div>';				if($element->getName()=="single")					echo '<div class="inlineBlock lineField"><select name="type" disabled="disabled"><option value="single" selected>single</option><option value="multi">multi</option></select></div>';				else					echo '<div class="inlineBlock lineField"><select name="type" disabled="disabled"><option value="single">single</option><option value="multi" selected>multi</option></select></div>';				echo '<div class="inlineBlock lineField"><input type="text" name="lvl" placeholder="privilège" value="'.$element['lvl'].'" /></div>';				echo '<div class="inlineBlock lineField">';				echo '<input type="hidden" name="edit" value="1" /><input type="hidden" name="n" value="'.$id.'" /><input type="submit" value ="Sauvegarder"/>';				echo '</div>';				echo '</div>';			}			$count++;		}			if($id==-1)				echo '<div class="line addline"><div class="inlineBlock lineField"><input type="text" name="nom" placeholder="nom" /></div><div class="inlineBlock lineField"><input type="text" name="id" placeholder="id" /></div><div class="inlineBlock lineField"><select name="type"><option value="single">single</option><option value="multi">multi</option></select></div><div class="inlineBlock lineField"><input type="text" name="lvl" placeholder="privilège" /></div><div class="inlineBlock lineField"><input type="submit" value ="Créer"/></div></div>';		echo '</div>';		echo '</form>';	}	public function adminHtml($id, $name, $n=-1) {		echo '<h3>'.$name.'</h3>';		foreach($this->xml->children() as $child )			if($child['id']==$id)			{				echo "<form name='adminElment' action='".$_SERVER["REQUEST_URI"]."' method='POST'>";				echo '<div class="form">';				$count = 0;				foreach( $child->children() as $key => $param) {					if($n!=$count)					{						echo '<div class="line"><div class="inlineBlock">';						echo $key;						if(isset($param['@attributes']))							echo '</div><div class="inlineBlock">'.$param['@attributes']['name'].'</div><div class="inlineBlock">'.$param['@attributes']['id'].'</div><div class="inlineBlock">';						else							echo '</div><div class="inlineBlock">'.$param['name'].'</div><div class="inlineBlock">'.$param['id'].'</div><div class="inlineBlock">';						echo "<a href='".strtok($_SERVER["REQUEST_URI"],'?')."?id=".$id."&name=".$name."&a=edit&n=".($count)."'><i class='icon-pencil'></i></a> <a class='suppr' href='".strtok($_SERVER["REQUEST_URI"],'?')."?id=".$id."&name=".$name."&a=delete&n=".$count."'><i class='icon-block'></i></a> ";						if($this->types($key)==1)							echo "<a class='choix' href='choix.php?id=".$id."&name=".$name."&n=".$count."'>options</a>";						echo '</div></div>';					} else {						echo '<div class="line addline"><div class="inlineBlock">';						echo '<select name="type">';						foreach($this->types() as $type)							echo '<option value="'.$type[0].'">'.$type[1].'</option>';						foreach( $this -> xml -> children() as $key => $element)							if((int)$element['lvl']>1 && $key=="multi")							echo '<option value="'.$element['id'].'">'.$element['name'].'</option>';						echo '</select>';						if(isset($par['@attributes']))							echo '</div><div class="inlineBlock"><input type="text" name="nom" placeholder="nom" value="'.$param['@attributes']['name'].'" /></td><td><input type="text" name="id" placeholder="id" value="'.$param['@attributes']['id'].'" /></td><td><input type="hidden" name="adminid" value="'.$id.'"><input type="submit" value ="Modifier"/></div></div>';						else							echo '</div><div class="inlineBlock"><input type="text" name="nom" placeholder="nom" value="'.$param['name'].'" /></td><td><input type="text" name="id" placeholder="id" value="'.$param['id'].'" /></td><td><input type="hidden" name="adminid" value="'.$id.'"><input type="hidden" name="adminid" value="'.$id.'"><input type="submit" value ="Modifier"/></div></div>';					}					$count++;				}				if($n==-1)				{					echo '<div class="line addline"><div class="inlineBlock lineField">';					echo '<select name="type">';					foreach($this->types() as $type)					echo '<option value="'.$type[0].'">'.$type[1].'</option>';						foreach( $this -> xml -> children() as $key => $element)							if((int)$element['lvl']>1 && $key=="multi")								echo '<option value="'.$element['id'].'">'.$element['name'].'</option>';					echo '</select>';					echo '</div><div class="inlineBlock lineField"><input type="text" name="nom" placeholder="nom" /></div><div class="inlineBlock lineField"><input type="text" name="id" placeholder="id" /></div><div class="inlineBlock lineField"><input type="hidden" name="adminid" value="'.$id.'">';					echo '<input type="submit" value ="Créer"/></div></div>';					echo "<input type='hidden' value='new' name='action' />";				} else					echo "<input type='hidden' value='edit' name='action' />";					echo '</div>';					echo '</div>';			}	}	public function newElement($type, $id, $name, $adminId) {		foreach($this->xml->children() as $child )		{			if($child['id']==$adminId)			{					$sxe = $child->addChild((string)$type);					$sxe->addAttribute('id', $id);					$sxe->addAttribute('name', $name);			}		}	}	public function editElement($type, $id, $name, $adminId, $n) {		$i=0;		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId)			{				foreach( $child -> children() as $element)				{					if($i==(int)$n)					{						$element['id'] = $id;						$element['name'] = $name;					}					$i++;				}			}		}	}	public function removeElement($n, $adminId) {		$count = 0;		foreach( $this -> xml -> children() as $element)		{			if( $element['id'] == $adminId)			{				foreach( $element -> children() as $child)				{					if( $count++ == $n )					{						$dom=dom_import_simplexml($child);						$dom->parentNode->removeChild($dom);						return true;					}				}			}		}		return false;	}	public function newAdmin($nom,$id,$type,$lvl) {			$xmlElement = $this->xml->addChild($type);			$xmlElement->addAttribute('id', $id);			$xmlElement->addAttribute('name', $nom);			$xmlElement->addAttribute('lvl', $lvl);	}	public function editAdmin($n,$nom,$id,$lvl) {			$i=0;			foreach($this->xml->children() as $child )			{				if($i==(int)$n)				{					$child['id'] = $id;					$child['name'] = $nom;					$child['lvl'] = $lvl;				}				$i++;			}	}	public function removeAdmin($id) {		$count = 0;		foreach( $this -> xml -> children() as $element)			if( $count++ == $id )			{				$dom=dom_import_simplexml($element);				$dom->parentNode->removeChild($dom);				return true;			}		return false;	}	public function adminChoix($adminId, $name, $n) {		$i=0;		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId)			{				foreach( $child -> children() as $key => $element)				{					if($i==(int)$n)					{							$vals = "";							foreach ($element->option as $values)								$vals .= (String)$values."\n";							echo '<a href="./admin.php?id='.$child['id'].'&name='.$child['name'].'"><h3>'.$child['name'].'</h3></a> > ';							echo $element['name']." (".$key.")";							echo '<form name="adminElement" action="'.$_SERVER["REQUEST_URI"].'" method="POST">';							switch($key){								case "checkbox":								case "radio":								case "select":									echo '<textarea name="options" placeholder="Liste des Choix" rows="9" cols="61">'.$vals.'</textarea>';								break;								case "html":									echo '<textarea name="content" placeholder="" rows="9" cols="61">'.$element->content.'</textarea>';								break;								case "title":								case "subtitle":								case "label":								case "bold":									echo '<input name="content" type="text" placeholder="Texte du titre" value="'.$element->content.'" />';								break;								case "fileadmin":									if($element->img)										echo '<input name="fil" type="hidden" value="admin/'.$element->img.'" />';									if($element->img)									{										echo '<div class="thumbs">';										echo '<img src="../../ups/admin/'.$element->img.'" />';										echo '<button><i class="icon-cancel-1"></i></button>';										echo '</div>';									}										echo '<input name="file" type="file" />';								break;							}								echo '<br><input type="submit" value="Enregistrer" />';								echo '</form>';					}					$i++;				}			}		}	}	public function adminOptions($adminId, $name, $n, $options) {		$i=0;		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId)			{				foreach( $child -> children() as $element)				{					if($i==(int)$n)					{							unset($element->option);						foreach($options as $option) {							if(!empty($option)||$option==0)							{								$sxe = $element->addChild('option',$option);								$sxe->addAttribute('id', idfy($option));							}						}					}					$i++;				}			}		}	}	public function adminContent($adminId, $name, $n, $content) {		$i=0;		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId)			{				foreach( $child -> children() as $element)				{					if($i==(int)$n)					{							unset($element->content);							if(!empty($content))							{								$sxe = $element->addChild('content',$content);							}					}					$i++;				}			}		}	}	public function adminFile($adminId, $name, $n, $file) {		if(file_exists("../../ups/tmp/".$file) && !is_dir("../../ups/tmp/".$file))		{				copy("../../ups/tmp/".$file,"../../ups/admin/".$file);				unlink("../../ups/tmp/".$file);		}		$i=0;		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId )			{				foreach( $child -> children() as $element)				{					if($i==(int)$n)					{							unset($element->img);							if(!empty($file))							{								$sxe = $element->addChild('img',$file);							}					}					$i++;				}			}		}	}	public function getContent($adminId, $id) {		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId)			{				foreach( $child -> children() as $element)				{					if($element['id']==$id)					{							return $element->content;					}				}			}		}	}	public function getImg($adminId, $id) {		foreach($this->xml->children() as $child )		{			if( $child['id'] == $adminId)			{				foreach( $child -> children() as $element)				{					if($element['id']==$id)					{							return $element->img;					}				}			}		}	}	public function save() {		$dom = new DOMDocument('1.0', 'utf-8');		$dom->preserveWhiteSpace = false;		$dom->formatOutput = true;		$dom->loadXML($this -> xml -> asXML());		$dom->save( $this -> path );	}	public function get($param) {		$array = json_decode(json_encode($this->xml), TRUE);		if(isset($array[classify($param)])&&!empty($array[classify($param)])) return $array[classify($param)]; else return false;	}	public function getXML() {		return $this->xml;	}}?>