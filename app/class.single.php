<?php require_once "functions.php";abstract class Single {	private $xml;	private $path;	private $uploadPath;	private $xmltag;	private $fileName;	private $elements;	public function __construct($xmltag = "single", $elements = Array()) {		$this->xmltag = $xmltag;		$this->fileName = $xmltag;		$this->elements = $elements;		$this->uploadPath = "../ups/".$this->xmltag."/";		$lang = 'fr'; if(isset($_SESSION['lang'])) $lang = $_SESSION['lang'];		$this -> path = dirname(dirname(__FILE__)).'/xml/'.$lang.'/'.$this->fileName.'.xml';		if(file_exists( $this -> path))		{			$context  = stream_context_create(array('http' => array('header' => 'Accept: application/xml')));			$xml = file_get_contents($this -> path, false, $context);			if ( substr_count ( $xml , '<' ) < 2 )				$this -> xml = new SimpleXMLElement('<'.$this->xmltag.'></'.$this->xmltag.'>');			else				$this -> xml = simplexml_load_string($xml, NULL, LIBXML_NOCDATA);		} else			$this -> xml = new SimpleXMLElement('<'.$this->xmltag.'></'.$this->xmltag.'>');		foreach($elements as $element)			if(!property_exists($this->xml->children(),classify($element[1]['name'])))				$this -> xml -> addChild(classify($element[1]['name']));	}	public function update($post) {			$sizes = Array(100, 1080);			foreach($this->elements as $element)				if(($element[0]=='file' || $element[0]=='gallery' )&& !empty($post[classify($element[1]['name'])]))				{					foreach($post[classify($element[1]['name'])] as $img)						if($img!='' && file_exists("../ups/tmp/".$img)) {							if (!file_exists($this->uploadPath))							    mkdir($this->uploadPath, 0777, true);							copy("../ups/tmp/".$img,$this->uploadPath.$img);							foreach ($sizes as $size) {								if(!file_exists($this->uploadPath.$size))									mkdir($this->uploadPath.$size,0777, true);								resizeImage($size,$this->uploadPath.$size."/".$img,$this->uploadPath.$img);							}						}				}			$files = glob('../ups/tmp/*');			foreach($files as $file) if(is_file($file)) unlink($file);			$elements = $this->elements;			foreach($elements as $element)				if(isset($post[classify($element[1]['name'])]))				{					if(is_array($post[classify($element[1]['name'])]))					{						$items = '';						foreach($post[classify($element[1]['name'])] as $item)							if($item!="")								$items .= '<item value="'.$item.'" />';						$array[classify($element[1]['name'])] = $items;					}					else						$array[classify($element[1]['name'])] = '<![CDATA['.$post[classify($element[1]['name'])].']]>';				}				else					$array[classify($element[1]['name'])] = '';			//JSON to XML			$return = '<'.$this->xmltag.'>';			foreach($array as $key => $item)				if(!empty($item))					$return .= "<{$key}>{$item}</{$key}>";				else					$return .= "<{$key}/>";			$return .= '</'.$this->xmltag.'>';			$this->xml = simplexml_load_string($return);	}	public function adminHtml($queryString = false){		$html="";		if($queryString)			$html="<form name='".$this->xmltag."' action='".$_SERVER["REQUEST_URI"]."' method='POST'><div class='singleForm'>";		else			$html="<form name='".$this->xmltag."' action='".strtok($_SERVER["REQUEST_URI"],'?')."' method='POST'><div class='singleForm'>";		$array = json_decode(json_encode($this->xml), TRUE);		$elements = $this->elements;		$sep = round( count($elements)/2 );		$html.="<div class='col field'>";		foreach( $elements as $element )		{			$html.='<div class="field">';			$html.="<label>".$element[1]['name']."</label>";			switch($element[0])			{				case 'radio':					$html .= "<span class='radio'>";					foreach($element[2] as $radio)					{						$html.="<input type='radio' name='".classify($element[1]['name'])."' value='".$radio."'";						if($array[classify($element[1]['name'])]==$radio) $html.=" checked='checked'";						$html.="/>".$radio." ";					}					$html .= "</span>";				break;				case 'checkbox':					$html.="<input type='checkbox'  name='".classify($element[1]['name'])."[]'";					if(!empty($array[classify($element[1]['name'])]))						if($array[classify($element[1]['name'])]==1)							$html.=" checked";					$html.=" />";				break;				case 'file':					if(!empty($array[classify($element[1]['name'])]))					{						$html.="<input type='hidden' name='".classify($element[1]['name'])."' value='".$array[classify($element[1]['name'])]."' />";						$html.="<span class='thumb'><button><i class='icon-cancel-1'></i></button><img src='../ups/".$this->xmltag."/".$array[classify($element[1]['name'])]."' /></span>";					} else {						$html.="<input type='file' class='".classify($element[1]['name'])."' name='".classify($element[1]['name'])."'/>";						$html.="";					}				break;				case 'textarea':					$html.="<textarea rows=10 cols=61 name='".classify($element[1]['name'])."'>";					if(!empty($array[classify($element[1]['name'])]))						$html.=str_replace('\'','&#39;',$array[classify($element[1]['name'])]);					$html.='</textarea>';				break;				case 'wysiwyg':					$html.='<span class="wysiwyg">';					$html.='<a class="popup-with-form" href="#media" data-textarea="'.idfy($element[1]['name']).'"><span><i class="icon-upload-cloud"></i></span></a>';					$html.='<a href="javascript:tag(\''.classify($element[1]['name']).'\',\'**\')" data-textarea="'.classify($element[1]['name']).'"><span style="font-weight:bold">A</span></a>';					$html.='<a href="javascript:tag(\''.classify($element[1]['name']).'\',\'*\')" data-textarea="'.classify($element[1]['name']).'"><span style="font-style:italic">A</span></a>';					$html.='<a href="javascript:tag(\''.classify($element[1]['name']).'\',\'--\')" data-textarea="'.classify($element[1]['name']).'"><span><strike>A</strike></span></a>';					$html.='<a href="#" data-textarea="'.classify($element[1]['name']).'"><span>couleur</span></a>';					$html.='<a href="#" data-textarea="'.classify($element[1]['name']).'"><span>titre</span></a>';					$html.='</span>';					$html.="<textarea rows=10 cols=61 name='".classify($element[1]['name'])."'>";					if(!empty($array[classify($element[1]['name'])]))						$html.=str_replace('\'','&#39;',$array[classify($element[1]['name'])]);					$html.='</textarea>';					$html.='<div class="preview"><span class="wysiwyg">Aper√ßu</span></div>';				break;				case 'text':				case 'password':					$html.="<input type='".$element[0]."' name='".classify($element[1]['name'])."' value='";					if(!empty($array[classify($element[1]['name'])]))						$html.=str_replace('\'','&#39;',$array[classify($element[1]['name'])]);					$html.="' />";				break;				case 'gallery':					$html.= '<span style="display: inline-block; vertical-align: 1.45em;color: #777;">.svg, .jpg, .jpeg, .png, .gif (max:'. formatBytes( file_upload_max_size(), 5 ) .')</span>';					if(!empty($array[classify($element[1]['name'])]))					{						$html.='<div class="galfield" data-class='.classify($element[1]['name']).'>';						$array[classify($element[1]['name'])] = $array[classify($element[1]['name'])]['item'];						if(isset($array[classify($element[1]['name'])]['@attributes']))							$html.="<div class='thumb' style='background-image: url(".$this->uploadPath."/100/".$array[classify($element[1]['name'])]['@attributes']['value'].")'><button><i class='icon-cancel'></i></button><input type='hidden' class='".classify($element[1]['name'])."' name='".classify($element[1]['name'])."[]' value='".$array[classify($element[1]['name'])]['@attributes']['value']."'/></div>";						else							foreach($array[classify($element[1]['name'])] as $item)									$html.= "<div class='thumb' style='background-image: url(".$this->uploadPath."/100/".$item['@attributes']['value'].")'><button><i class='icon-cancel'></i></button><input type='hidden' class='".classify($element[1]['name'])."' name='".classify($element[1]['name'])."[]' value='".$item['@attributes']['value']."'/></div>";						$html.="</div>";						$html.="<input type='file'  id='".classify($element[1]['name'])."' class='".classify($element[1]['name'])."' name='".classify($element[1]['name'])."[]'  multiple='multiple'/>";						$html.='<span class="gal">';						$html.='</span>';						//$html.="<span class='gal'><span class='galadd'></span></span>";					} else {						/* $html.='<span class="galfield" data-class='.classify($element[1]['name']).'>';						$html.="</span>"; */							$html.="<input type='file' id='".classify($element[1]['name'])."' class='".classify($element[1]['name'])."' name='".classify($element[1]['name'])."[]'  multiple='multiple'/>";						$html.='<span class="gal">';						$html.='</span>';					}				break;				case 'theme':					$htm_path = dirname(dirname(__FILE__))."/htm";					$themes = scandir($htm_path);					foreach($themes as $key => $theme)						if($theme == '.' || $theme == '..' || !is_dir($htm_path."/".$theme))							unset($themes[$key]);					$html.="<select name='theme'>";					foreach($themes as $theme)					{						$html .= '<option value="'.$theme.'" ';							if(!empty($array[classify($element[1]['name'])]) && $array[classify($element[1]['name'])] == $theme)								$html .= 'selected';							$html .= '>'.$theme.'</option>';					}					$html.="</select>";				break;				default:					// $html.= $element[0];					$path = dirname(dirname(__FILE__)).'/xml/fr/'.$element[0].'.xml';					if(file_exists( $path ))					{						$context  = stream_context_create(array('http' => array('header' => 'Accept: application/xml')));						$xml = file_get_contents($path, false, $context);						$xmlDonnee = simplexml_load_string($xml);						$array2 = json_decode(json_encode($xmlDonnee), TRUE);						$html .= '<select name="'.$element[1]['name'].'">';						foreach($array2['element'] as $element2)						{							$html .= '<option value="'.$element2['id'].'" ';							if(!empty($array[idfy($element[1]['name'])]) && $array[idfy($element[1]['name'])] == $element2['id'])								$html .= 'selected';							$html .= '>'.$element2['nom'].'</option>';						}						$html .= "</select>";					}					else						$html.= "La classe <i>".$element[0]."</i> n'existe pas ou n'a pas d'enregistrements.";				break;			}			$html.="</div>";			if(--$sep==0)				$html.="</div><div class='col'>";		}		$html.="</div>";		$html.="<p><input type='submit' value='Enregistrer' /></p>";		$html.="</div></form>	<form id='media' name='media' class='white-popup-block mfp-hide'>				<h3>Ajout de M√©dia</h3>				<p>					<input type='file' name='media' />					<span class='thumb'></span>				</p>				<button>Ins√©rer dans l'article</button>			</form>";		echo $html;	}	public function save() {		$dom = new DOMDocument('1.0', 'utf-8');		$dom->preserveWhiteSpace = false;		$dom->formatOutput = true;		$dom->loadXML($this -> xml -> asXML());		$dom->save( $this -> path );	}	public function xmlTag() {		return $this->xmltag;	}	public function getPath() {		return $this->path;	}	public function getUploadPath() {		return $this->uploadPath;	}	public function getXML() {		return $this->xml;	}	public function getElements() {		return $this->elements;	}	public function getfileName() {		return $this->fileName;	}	public function setXML($xml) {		$this->xml = $xml;	}	public function setfileName($fileName) {		$this->fileName = $fileName;	}	public function setPath($path) {		$this->path = $path;	}	public function setUploadPath($uploadPath) {		$this->uploadPath = $uploadPath;	}	public function setXMLTag($xmlTag) {		$this->xmltag = $xmlTag;	}	public function setElements($elements) {		$this->elements = $elements;	}	public function getBackground($param) {		$array = json_decode(json_encode($this->xml), TRUE);		if(isset($array[classify($param)])&&!empty($array[classify($param)]))			$items = $array[classify($param)];		else			return Array();		$return = Array();		foreach ($items as $item) {			if(!empty($item['@attributes']['value']))				$return[] = $item['@attributes']['value'];			else {					foreach($item as $background)						if(!empty($background['@attributes']['value']))							$return[] = $background['@attributes']['value'];			}		}		return $return;	}	public function get($param) {		$array = json_decode(json_encode($this->xml), TRUE);		if(isset($array[classify($param)])&&!empty($array[classify($param)]))		 	return $array[classify($param)];		else			return false;	}}?>